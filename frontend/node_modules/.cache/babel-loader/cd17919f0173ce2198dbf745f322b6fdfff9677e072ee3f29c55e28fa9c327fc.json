{"ast":null,"code":"var _jsxFileName = \"/Users/jeevanbhatta/Downloads/todo-web-app/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TaskList from './components/TaskList';\nimport TaskForm from './components/TaskForm';\n\n// Configure axios defaults\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = 'http://localhost:5000';\naxios.defaults.withCredentials = true;\naxios.defaults.headers.common['Content-Type'] = 'application/json';\nconst App = () => {\n  _s();\n  const [lists, setLists] = useState([]);\n  const [selectedList, setSelectedList] = useState(null);\n  const [tasks, setTasks] = useState([]);\n\n  // Fetch all task lists on load\n  useEffect(() => {\n    const fetchLists = async () => {\n      try {\n        const response = await axios.get('/api/lists');\n        setLists(response.data);\n        setError(null);\n      } catch (err) {\n        var _err$response, _err$response$data;\n        console.error('Full error:', err);\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Error fetching task lists');\n        setLists([]);\n      }\n    };\n    fetchLists();\n  }, []);\n\n  // Fetch tasks when a list is selected\n  const fetchTasks = async listId => {\n    try {\n      const response = await axios.get(`/api/lists/${listId}/tasks`);\n      setTasks(response.data);\n      setSelectedList(listId);\n      setError(null);\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error('Error fetching tasks:', err);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Error fetching tasks');\n      setTasks([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hierarchical Todo List App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-list-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Task Lists\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), lists.map(list => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => fetchTasks(list.id),\n        children: list.name\n      }, list.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), selectedList && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-section\",\n      children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n        selectedList: selectedList,\n        setTasks: setTasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: tasks,\n        setTasks: setTasks,\n        selectedList: selectedList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"BCNRtjjgx5i7DU5DhjosDnL0evU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","TaskList","TaskForm","jsxDEV","_jsxDEV","defaults","baseURL","withCredentials","headers","common","App","_s","lists","setLists","selectedList","setSelectedList","tasks","setTasks","fetchLists","response","get","data","setError","err","_err$response","_err$response$data","console","error","message","fetchTasks","listId","_err$response2","_err$response2$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","list","onClick","id","name","_c","$RefreshReg$"],"sources":["/Users/jeevanbhatta/Downloads/todo-web-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TaskList from './components/TaskList';\nimport TaskForm from './components/TaskForm';\n\n// Configure axios defaults\naxios.defaults.baseURL = 'http://localhost:5000';\naxios.defaults.withCredentials = true;\naxios.defaults.headers.common['Content-Type'] = 'application/json';\n\nconst App = () => {\n  const [lists, setLists] = useState([]);\n  const [selectedList, setSelectedList] = useState(null);\n  const [tasks, setTasks] = useState([]);\n\n  // Fetch all task lists on load\n  useEffect(() => {\n    const fetchLists = async () => {\n      try {\n        const response = await axios.get('/api/lists');\n        setLists(response.data);\n        setError(null);\n      } catch (err) {\n        console.error('Full error:', err);\n        setError(err.response?.data?.message || 'Error fetching task lists');\n        setLists([]);\n      }\n    };\n\n    fetchLists();\n  }, []);\n\n  // Fetch tasks when a list is selected\n  const fetchTasks = async (listId) => {\n    try {\n      const response = await axios.get(`/api/lists/${listId}/tasks`);\n      setTasks(response.data);\n      setSelectedList(listId);\n      setError(null);\n    } catch (err) {\n      console.error('Error fetching tasks:', err);\n      setError(err.response?.data?.message || 'Error fetching tasks');\n      setTasks([]);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Hierarchical Todo List App</h1>\n      <div className=\"task-list-section\">\n        <h2>Task Lists</h2>\n        {lists.map(list => (\n          <div key={list.id} onClick={() => fetchTasks(list.id)}>\n            {list.name}\n          </div>\n        ))}\n      </div>\n\n      {selectedList && (\n        <div className=\"task-section\">\n          <TaskForm selectedList={selectedList} setTasks={setTasks} />\n          <TaskList tasks={tasks} setTasks={setTasks} selectedList={selectedList} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;;AAE5C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAJ,KAAK,CAACK,QAAQ,CAACC,OAAO,GAAG,uBAAuB;AAChDN,KAAK,CAACK,QAAQ,CAACE,eAAe,GAAG,IAAI;AACrCP,KAAK,CAACK,QAAQ,CAACG,OAAO,CAACC,MAAM,CAAC,cAAc,CAAC,GAAG,kBAAkB;AAElE,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMmB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAC,YAAY,CAAC;QAC9CP,QAAQ,CAACM,QAAQ,CAACE,IAAI,CAAC;QACvBC,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOC,GAAG,EAAE;QAAA,IAAAC,aAAA,EAAAC,kBAAA;QACZC,OAAO,CAACC,KAAK,CAAC,aAAa,EAAEJ,GAAG,CAAC;QACjCD,QAAQ,CAAC,EAAAE,aAAA,GAAAD,GAAG,CAACJ,QAAQ,cAAAK,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcH,IAAI,cAAAI,kBAAA,uBAAlBA,kBAAA,CAAoBG,OAAO,KAAI,2BAA2B,CAAC;QACpEf,QAAQ,CAAC,EAAE,CAAC;MACd;IACF,CAAC;IAEDK,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMW,UAAU,GAAG,MAAOC,MAAM,IAAK;IACnC,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAC,cAAcU,MAAM,QAAQ,CAAC;MAC9Db,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAAC;MACvBN,eAAe,CAACe,MAAM,CAAC;MACvBR,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOC,GAAG,EAAE;MAAA,IAAAQ,cAAA,EAAAC,mBAAA;MACZN,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEJ,GAAG,CAAC;MAC3CD,QAAQ,CAAC,EAAAS,cAAA,GAAAR,GAAG,CAACJ,QAAQ,cAAAY,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcV,IAAI,cAAAW,mBAAA,uBAAlBA,mBAAA,CAAoBJ,OAAO,KAAI,sBAAsB,CAAC;MAC/DX,QAAQ,CAAC,EAAE,CAAC;IACd;EACF,CAAC;EAED,oBACEb,OAAA;IAAK6B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB9B,OAAA;MAAA8B,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnClC,OAAA;MAAK6B,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChC9B,OAAA;QAAA8B,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAClB1B,KAAK,CAAC2B,GAAG,CAACC,IAAI,iBACbpC,OAAA;QAAmBqC,OAAO,EAAEA,CAAA,KAAMZ,UAAU,CAACW,IAAI,CAACE,EAAE,CAAE;QAAAR,QAAA,EACnDM,IAAI,CAACG;MAAI,GADFH,IAAI,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAELxB,YAAY,iBACXV,OAAA;MAAK6B,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3B9B,OAAA,CAACF,QAAQ;QAACY,YAAY,EAAEA,YAAa;QAACG,QAAQ,EAAEA;MAAS;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5DlC,OAAA,CAACH,QAAQ;QAACe,KAAK,EAAEA,KAAM;QAACC,QAAQ,EAAEA,QAAS;QAACH,YAAY,EAAEA;MAAa;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAxDID,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AA0DT,eAAeA,GAAG;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}