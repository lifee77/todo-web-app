{"ast":null,"code":"var _jsxFileName = \"/Users/jeevanbhatta/Downloads/todo-web-app/frontend/src/components/TaskItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskItem = ({\n  task,\n  setTasks,\n  selectedList\n}) => {\n  _s();\n  const [isExpanded, setIsExpanded] = useState(false);\n  const toggleExpand = () => setIsExpanded(!isExpanded);\n  const markComplete = taskId => {\n    axios.put(`http://localhost:5000/api/tasks/${taskId}`, {\n      completed: !task.completed\n    }).then(() => {\n      // Refetch tasks after updating the status\n      axios.get(`http://localhost:5000/api/lists/${selectedList}/tasks`).then(response => setTasks(response.data));\n    }).catch(error => console.error('Error updating task:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: task.completed,\n        onChange: () => markComplete(task.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: toggleExpand,\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), isExpanded && task.subtasks && task.subtasks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subtasks\",\n      children: task.subtasks.map(subtask => /*#__PURE__*/_jsxDEV(TaskItem, {\n        task: subtask,\n        setTasks: setTasks,\n        selectedList: selectedList\n      }, subtask.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskItem, \"FPNvbbHVlWWR4LKxxNntSxiIS38=\");\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","TaskItem","task","setTasks","selectedList","_s","isExpanded","setIsExpanded","toggleExpand","markComplete","taskId","put","completed","then","get","response","data","catch","error","console","className","children","type","checked","onChange","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","subtasks","length","map","subtask","_c","$RefreshReg$"],"sources":["/Users/jeevanbhatta/Downloads/todo-web-app/frontend/src/components/TaskItem.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst TaskItem = ({ task, setTasks, selectedList }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const toggleExpand = () => setIsExpanded(!isExpanded);\n\n  const markComplete = (taskId) => {\n    axios.put(`http://localhost:5000/api/tasks/${taskId}`, { completed: !task.completed })\n      .then(() => {\n        // Refetch tasks after updating the status\n        axios.get(`http://localhost:5000/api/lists/${selectedList}/tasks`)\n          .then(response => setTasks(response.data));\n      })\n      .catch(error => console.error('Error updating task:', error));\n  };\n\n  return (\n    <div className=\"task-item\">\n      <div className=\"task-header\">\n        <input\n          type=\"checkbox\"\n          checked={task.completed}\n          onChange={() => markComplete(task.id)}\n        />\n        <span onClick={toggleExpand}>{task.title}</span>\n      </div>\n      {isExpanded && task.subtasks && task.subtasks.length > 0 && (\n        <div className=\"subtasks\">\n          {task.subtasks.map(subtask => (\n            <TaskItem key={subtask.id} task={subtask} setTasks={setTasks} selectedList={selectedList} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TaskItem;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,IAAI;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACrD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMW,YAAY,GAAGA,CAAA,KAAMD,aAAa,CAAC,CAACD,UAAU,CAAC;EAErD,MAAMG,YAAY,GAAIC,MAAM,IAAK;IAC/BZ,KAAK,CAACa,GAAG,CAAC,mCAAmCD,MAAM,EAAE,EAAE;MAAEE,SAAS,EAAE,CAACV,IAAI,CAACU;IAAU,CAAC,CAAC,CACnFC,IAAI,CAAC,MAAM;MACV;MACAf,KAAK,CAACgB,GAAG,CAAC,mCAAmCV,YAAY,QAAQ,CAAC,CAC/DS,IAAI,CAACE,QAAQ,IAAIZ,QAAQ,CAACY,QAAQ,CAACC,IAAI,CAAC,CAAC;IAC9C,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACjE,CAAC;EAED,oBACElB,OAAA;IAAKoB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBrB,OAAA;MAAKoB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BrB,OAAA;QACEsB,IAAI,EAAC,UAAU;QACfC,OAAO,EAAErB,IAAI,CAACU,SAAU;QACxBY,QAAQ,EAAEA,CAAA,KAAMf,YAAY,CAACP,IAAI,CAACuB,EAAE;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC,eACF7B,OAAA;QAAM8B,OAAO,EAAEtB,YAAa;QAAAa,QAAA,EAAEnB,IAAI,CAAC6B;MAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,EACLvB,UAAU,IAAIJ,IAAI,CAAC8B,QAAQ,IAAI9B,IAAI,CAAC8B,QAAQ,CAACC,MAAM,GAAG,CAAC,iBACtDjC,OAAA;MAAKoB,SAAS,EAAC,UAAU;MAAAC,QAAA,EACtBnB,IAAI,CAAC8B,QAAQ,CAACE,GAAG,CAACC,OAAO,iBACxBnC,OAAA,CAACC,QAAQ;QAAkBC,IAAI,EAAEiC,OAAQ;QAAChC,QAAQ,EAAEA,QAAS;QAACC,YAAY,EAAEA;MAAa,GAA1E+B,OAAO,CAACV,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkE,CAC5F;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxB,EAAA,CAlCIJ,QAAQ;AAAAmC,EAAA,GAARnC,QAAQ;AAoCd,eAAeA,QAAQ;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}